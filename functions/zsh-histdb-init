#!/bin/zsh

[[ -n $HISTDB_BORING_COMMANDS ]] \
	|| HISTDB_BORING_COMMANDS=($'^ls$' $'^cd$' $'^ ' $'^histdb' $'^top$' $'^htop$')


zsh-histdb-query() {
	local cmd=(
		sqlite3
		-header
		-column

		${HISTDB_FILE:?}

		"$@"
	)

	local rv=0; $cmd || rv=$?

	[[ $rv -eq 0 ]] \
		|| printf '\n\n[%s] error (rv=%d) executing query: %s\n\n' $0 $rv "$cmd" >&2

	return $rv
}


zsh-histdb-createdb() {
	[[ ! -e ${HISTDB_FILE:?} ]]

	local hist_dir=${HISTDB_FILE:h}
	mkdir -pv -- $hist_dir

	zsh-histdb-query <<-'EOF'
		begin transaction;
		create table commands (argv text, unique(argv) on conflict ignore);
		create table places   (host text, dir text, unique(host, dir) on conflict ignore);
		create table history  (
			session int,
			command_id int references commands (rowid),
			place_id int references places (rowid),
			exit_status int,
			start_time int,
			duration int
		);
		commit;
	EOF
}


zsh-histdb-init () {
	[[ -e ${HISTDB_FILE:?} ]] || zsh-histdb-createdb
	[[ -z $__histdb_sessid ]]  || return 0

	HISTDB_HOST=$HOST

	local q="select 1+max(h.session) from history as h inner join places as p on p.rowid = h.place_id where p.host = ${(qqq)HISTDB_HOST} ;"

	local raw=($(zsh-histdb-query $q))
	typeset -i -g __histdb_sessid=${raw[-1]}

	typeset -i -g __histdb_retvals_planned=0

	autoload -Uz add-zsh-hook
	add-zsh-hook zshaddhistory zsh-histdb-insert
	add-zsh-hook precmd zsh-histdb-update-retval
}


zsh-histdb-insert () {
	local cmd="${1[0, -2]}"
	[[ -n $cmd ]] || return 0

	local boring
	for boring in ${(@)HISTDB_BORING_COMMANDS}; do
		if [[ $cmd =~ $boring ]]; then
			return 0
		fi
	done

	local -i started=$(date +%s)

	zsh-histdb-query <<-EOF
		begin transaction;
		insert into commands (argv) values (${(qqq)cmd});
		insert into places   (host, dir) values (${(qqq)HISTDB_HOST}, ${(qqq)PWD});
		insert into history  (session, command_id, place_id, start_time)
		  select ${(q)__histdb_sessid}, c.rowid, p.rowid, ${(qqq)started}
		  from commands as c, places as p
		  where c.argv = ${(qqq)cmd} and p.host = ${(qqq)HISTDB_HOST} and p.dir = ${(qqq)PWD} ;
		commit;
	EOF

	let '__histdb_retvals_planned ++'

	return 0
}


zsh-histdb-update-retval () {
	[[ $__histdb_retvals_planned -gt 0 ]] || return
	let '__histdb_retvals_planned --'

	local -i rv=$?
	local -i finished=$(date +%s)

    local q="update history set exit_status = ${(q)rv}, duration = ${(q)finished} - start_time "
    q+="where rowid = (select max(rowid) from history) and session = ${(q)__histdb_sessid:?}"

	zsh-histdb-query $q
}


zsh-histdb-init "$@"

