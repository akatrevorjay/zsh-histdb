#!/bin/zsh

zmodload zsh/regex
autoload -Uz add-zsh-hook


typeset -a HISTDB_BORING_COMMANDS
[[ $#HISTDB_BORING_COMMANDS -gt 0 ]] \
    || HISTDB_BORING_COMMANDS=($'^ls$' $'^cd$' $'^ ' $'^histdb' $'^top$' $'^htop$')

typeset -ig HISTDB_AWAITING_EXIT=0
typeset -g HISTDB_FILE HISTDB_INSTALLED_IN


zsh-histdb-query() {
    local cmd=(
        sqlite3
        -header
        -column

        ${HISTDB_FILE:?}

        "$@"
    )

    local rv=0; $cmd || rv=$?

    [[ $rv -eq 0 ]] || \
        printf '\n\n[%s] error (rv=%d) executing query: %s\n\n' $0 $rv "$cmd" >&2

    return $rv
}


zsh-histdb-createdb() {
    [[ ! -e ${HISTDB_FILE:?} ]]

    local hist_dir=${HISTDB_FILE:h}
    mkdir -pv -- $hist_dir

    zsh-histdb-query <<-'EOF'
        begin transaction;
        create table commands (argv text, unique(argv) on conflict ignore);
        create table places   (host text, dir text, unique(host, dir) on conflict ignore);
        create table history  (
            session int,
            command_id int references commands (rowid),
            place_id int references places (rowid),
            exit_status int,
            start_time int,
            duration int
        );
        commit;
    EOF
}


zsh-histdb-init () {
    [[ -e ${HISTDB_FILE:?} ]] || zsh-histdb-createdb

    if [[ -z $HISTDB_SESSION ]]; then
        HISTDB_HOST=$HOST

        local q=(
            "select 1+max(session) from history inner"
            "join places on places.rowid=history.place_id"
            "where places.host = ${(qqq)HISTDB_HOST}"
        )

        local sessid=$(zsh-histdb-query "$q"| tail -n1)
        HISTDB_SESSION=${sessid// }

        : ${HISTDB_SESSION:=0}
        readonly -i HISTDB_SESSION

        add-zsh-hook zshaddhistory  zsh-histdb-insert
        add-zsh-hook precmd         zsh-histdb-update-outcome
    fi
}


zsh-histdb-insert () {
    local cmd="${1[0, -2]}"
    [[ -n $cmd ]] || return 0

    local boring
    for boring in ${(@)HISTDB_BORING_COMMANDS}; do
        if [[ $cmd =~ $boring ]]; then
            return 0
        fi
    done

    local started=$(date +%s)

    zsh-histdb-query <<-EOF
        begin transaction;

        insert into commands (argv) values (${(qqq)cmd});
        insert into places   (host, dir) values (${(qqq)HISTDB_HOST}, ${(qqq)PWD});
        insert into history
            (session, command_id, place_id, start_time)
            select
                ${HISTDB_SESSION},
                commands.rowid,
                places.rowid,
                ${started}
              from
                commands, places
              where
                commands.argv = ${(qqq)cmd} and
                places.host = ${(qqq)HISTDB_HOST} and
                places.dir = ${(qqq)PWD}
              ;

        commit;
    EOF

    HISTDB_AWAITING_EXIT=1
    return 0
}


zsh-histdb-update-outcome () {
    local retval=$?
    local finished=$(date +%s)

    [[ $HISTDB_AWAITING_EXIT -eq 1 ]] || return 0

    HISTDB_AWAITING_EXIT=0

    zsh-histdb-query <<-EOF
        update history set
            exit_status = $retval,
            duration = $finished - start_time
            where rowid = (select max(rowid) from history)
                and session = ${HISTDB_SESSION}
    EOF
}


zsh-histdb-init "$@"

