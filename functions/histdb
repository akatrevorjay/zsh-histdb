#!/bin/zsh

histdb () {
    zsh-histdb-init
    local opts=() hosts=() indirs=() atdirs=() sessions=()

    zparseopts -E -D -a opts \
               -host+::=hosts \
               -in+::=indirs \
               -at+::=atdirs \
               -forget \
               -detail \
               -exact \
               d h -help \
               s+::=sessions \
               -from:- -until:- -limit:-

    local usage="usage:$0 terms [--host] [--in] [--at] [-s n]+* [--from] [--until] [--limit] [--forget] [--detail]
    --host    print the host column and show all hosts (otherwise current host)
    --host x  find entries from host x
    --in      find only entries run in the current dir or below
    --in x    find only entries in directory x or below
    --at      like --in, but excluding subdirectories
    -s n      only show session n
    -d        debug output query that will be run
    --detail  show details
    --forget  forget everything which matches in the history
    --exact   don't match substrings
    --from x  only show commands after date x (sqlite date parser)
    --until x only show commands before date x (sqlite date parser)
    --limit n only show n rows. defaults to $LINES or 25"

    local sescol="replace(session, $HISTDB_SESSION, 'cur/$HISTDB_SESSION') as ses"
    local selcols="$sescol, dir"
    local cols="session, replace(places.dir, ${(qqq)HOME}, '~') as dir"
    local where="not (commands.argv like 'histdb%')"

    if [[ -p /dev/stdout ]]; then
        local limit=""
    else
        local limit="${$((LINES - 4)):-25}"
    fi

    local forget="0"
    local exact=0

    if (( ${#hosts} )); then
        local hostwhere=""
        local host=""

        for host ($hosts); do
            host="${${host#--host}#=}"
            hostwhere+="${host:+${hostwhere:+ or }places.host=${(qqq)host}}"
        done

        where+="${hostwhere:+ and (${hostwhere})}"
        cols+=", places.host as host"
        selcols+=", host"
    else
      where="${where} and places.host=${(qqq)HISTDB_HOST}"
    fi

    if (( ${#indirs} + ${#atdirs} )); then
        local dirwhere=""
        local dir=""
        local match=''

        for dir ($indirs); do
            dir=${${${dir#--in}#=}:-$PWD}
            match="$dir%"
            dirwhere="${dirwhere}${dirwhere:+ or }places.dir like ${(qqq)match}"
        done

        for dir ($atdirs); do
            dir="${${${dir#--at}#=}:-$PWD}"
            dirwhere="${dirwhere}${dirwhere:+ or }places.dir = ${(qqq)dir}"
        done

        where="${where}${dirwhere:+ and (${dirwhere})}"
    fi

    if (( ${#sessions} )); then
        local sin=""
        local ses=""
        for ses ($sessions); do
            ses="${${${ses#-s}#=}:-${HISTDB_SESSION}}"
            sin="${sin}${sin:+, }$ses"
        done
        where="${where}${sin:+ and session in ($sin)}"
    fi

    local debug=0
    local opt=""
    for opt ($opts); do
        case $opt in
            --from*)
                local from=${opt#--from}

                case $from in
                    -*)
                        from="datetime('now', ${(qqq)from})"
                        ;;
                    today)
                        from="datetime('now', 'start of day')"
                        ;;
                    yesterday)
                        from="datetime('now', 'start of day', '-1 day')"
                        ;;
                esac

                where="${where} and datetime(start_time, 'unixepoch') >= $from"
                ;;

            --until*)
                local until=${opt#--until}

                case $until in
                    -*)
                        until="datetime('now', ${(qqq)until})"
                        ;;
                    today)
                        until="datetime('now', 'start of day')"
                        ;;
                    yesterday)
                        until="datetime('now', 'start of day', '-1 day')"
                        ;;
                esac

                where="${where} and datetime(start_time, 'unixepoch') <= $until"
                ;;

            -d)
                debug=1
                ;;

            --detail)
                cols="${cols}, exit_status, duration "
                selcols+=", exit_status as rv, duration as secs "
                ;;

            -h|--help)
                echo "$usage" >&2
                return 0
                ;;

            --forget)
                forget=1
                ;;

            --exact)
                exact=1
                ;;

            --limit*)
                limit=${opt#--limit}
                ;;
        esac
    done

    if [[ -n "$*" ]]; then
        if [[ $exact -eq 0 ]]; then
            local match="*${*}*"
            where="${where} and commands.argv glob ${(qqq)match}"
        else
            where="${where} and commands.argv = ${(qqq)*}"
        fi
    fi

    if [[ $forget -gt 0 ]]; then
        limit=""
    fi
    cols+=", commands.argv as argv, max(start_time) as max_start, history.start_time as start_time"

    local mst="datetime(max_start, 'unixepoch')"
    local dst="datetime('now', 'start of day')"
    local timecol="strftime(case when $mst > $dst then '%H:%M' else '%m/%d/%Y' end, max_start, 'unixepoch', 'localtime') as at"

    # selcols="${timecol}, datetime(max_start, 'unixepoch') as full_timestamp, ${selcols}, argv as cmd"
    selcols="${timecol}, ${selcols}, argv as cmd"

    local query="select ${selcols} from
(
  select ${cols}
  from
    history
    left join commands on history.command_id = commands.rowid
    left join places on history.place_id = places.rowid
  where ${where}
  group by history.command_id, history.place_id
  order by history.start_time desc
  ${limit:+limit $limit}
)
order by start_time asc
"

    ## min max date?
    local count_query="select count(*) from
(
  select ${cols}
  from
    history
    left join commands on history.command_id = commands.rowid
    left join places on history.place_id = places.rowid
  where ${where}
  group by history.command_id, history.place_id
)
"

    if [[ $debug = 1 ]]; then
        echo "$query"
    else
        local count=$(zsh-histdb-query $count_query | tail -n1)

        zsh-histdb-query $query

        [[ -n $limit ]] && [[ $limit -lt $count ]] && echo "(showing $limit of $count results)"
    fi

    if [[ $forget -gt 0 ]]; then
        read -q "REPLY?Forget all these results? [y/n] "
        if [[ $REPLY =~ "[yY]" ]]; then
            zsh-histdb-query "delete from history where
history.rowid in (
select history.rowid from
history
  left join commands on history.command_id = commands.rowid
  left join places on history.place_id = places.rowid
where ${where})"
            zsh-histdb-query "delete from commands where commands.rowid not in (select distinct history.command_id from history)"
        fi
    fi
}

histdb "$@"

