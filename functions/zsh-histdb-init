#!/bin/zsh

zsh-histdb-init () {
    if ! [[ -e ${HISTDB_FILE} ]]; then
        local hist_dir=${HISTDB_FILE:h}
        mkdir -pv -- $hist_dir

        zsh-histdb-query <<-EOF
create table commands (argv text, unique(argv) on conflict ignore);
create table places   (host text, dir text, unique(host, dir) on conflict ignore);
create table history  (session int,
                       command_id int references commands (rowid),
                       place_id int references places (rowid),
                       exit_status int,
                       start_time int,
                       duration int);
EOF
    fi

    if [[ -z ${HISTDB_SESSION} ]]; then
        HISTDB_HOST=$HOST

        HISTDB_SESSION=$(zsh-histdb-query "select 1+max(session) from history inner join places on places.rowid=history.place_id where places.host = ${(qqq)HISTDB_HOST}" | tail -n1)
        HISTDB_SESSION=($=HISTDB_SESSION)
        HISTDB_SESSION="$HISTDB_SESSION"
        : ${HISTDB_SESSION:=0}
        readonly -i HISTDB_SESSION

        autoload -Uz add-zsh-hook
        add-zsh-hook precmd zsh-histdb-update-outcome
    fi
}

zsh-histdb-zshaddhistory () {
    local cmd="${1[0, -2]}"
    [[ -n $cmd ]] || return 0

    local boring
    for boring in ${(@)_BORING_COMMANDS}; do
        if [[ $cmd =~ $boring ]]; then
            return 0
        fi
    done

    local started=$(date +%s)
    zsh-histdb-init

    zsh-histdb-query \
      "begin transaction;
      insert into commands (argv) values (${(qqq)cmd});
      insert into places   (host, dir) values (${(qqq)HISTDB_HOST}, ${(qqq)PWD});
      insert into history
        (session, command_id, place_id, start_time)
          select
            ${HISTDB_SESSION},
            commands.rowid,
            places.rowid,
            ${started}
              from
                commands, places
              where
                commands.argv = ${(qqq)cmd} and
                places.host = ${(qqq)HISTDB_HOST} and
                places.dir = ${(qqq)PWD}
        ;
      commit;"

    HISTDB_AWAITING_EXIT=1

    return 0
}

zshaddhistory() {
    zsh-histdb-zshaddhistory "$@"
}

zsh-histdb-init "$@"

